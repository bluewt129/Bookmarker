# 기본 이미지 선택, 필요한 패키지 및 설정 파일을 이미지에 복사
FROM node:20-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# 빌더를 하기 위한 내부 폴더를 선택하고 필요 node_modules를 복사하고 빌드
FROM node:20-alpine AS builder
WORKDIR /app
COPY . .

# 권한 문제 해결을 위해 모든 파일의 권한을 설정
RUN chown -R node:node /app
RUN chmod -R 755 /app

COPY --from=deps /app/node_modules ./node_modules
COPY .env.local .env.local 
RUN yarn build

# 실행을 위한 이미지와 폴더를 선택하고 환경설정을 한다
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV production

RUN addgroup -S nodejs
RUN adduser -S nextjs -G nodejs

# 필요한 파일을 복사하고, 권한 설정
COPY --from=builder /app/next.config.mjs ./
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/.env.local .env.local

# 권한 설정
RUN chown -R nextjs:nodejs /app
RUN chmod -R 755 /app

USER nextjs
EXPOSE 3000
CMD ["yarn", "start"]  
