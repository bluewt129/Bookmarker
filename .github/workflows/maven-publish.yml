# 이 워크플로우는 Maven을 사용하여 패키지를 빌드하고, 릴리스가 생성되면 Docker 이미지를 빌드 및 푸시하는 설정입니다.

name: Build

on:
  push:
    branches: ["**"]

jobs:
  build-bookmark-api:
    name: Build bookmarker-api
    runs-on: ubuntu-latest

    services:
      bookmarker-db:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # PostgreSQL이 준비될 때까지 대기
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h bookmarker-db -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 3
          done

      # Maven 빌드 실행
      - name: Build with Maven
        run: |
          chmod +x mvnw
          ./mvnw verify

      # 메인 브랜치에 푸시된 경우에만 Docker 이미지를 빌드하고 푸시
      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          ./mvnw clean package jib:dockerBuild -DskipTests
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t myimage:latest .
          docker tag myimage:latest ${{ secrets.DOCKER_USERNAME }}/bookmarker-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bookmarker-api:latest
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled
