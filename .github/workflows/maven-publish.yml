# 이 워크플로우는 Maven을 사용하여 패키지를 빌드하고, 릴리스가 생성되면 Docker 이미지를 빌드 및 푸시하는 설정입니다.

name: Build and Publish Docker Image

on:
  push:
    branches:
      - '**'

jobs:
  build-bookmark-api:
    name: Build and Publish bookmarker-api
    runs-on: ubuntu-latest

    services:
      bookmarker-db:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: appdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Git 저장소에서 소스 코드를 가져옵니다.
      - name: Checkout repository
        uses: actions/checkout@v4

      # JDK 17을 설정합니다.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      # PostgreSQL 데이터베이스가 준비될 때까지 대기합니다.
      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h bookmarker-db -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 3
          done

      # Maven 빌드 실행
      - name: Build with Maven
        run: |
          chmod +x mvnw
          ./mvnw verify

      # 메인 브랜치에 푸시된 경우에만 Docker 이미지를 빌드하고 푸시합니다.
      - name: Build and Publish Docker Image
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          ./mvnw clean package jib:dockerBuild -DskipTests
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t myimage:latest .
          docker tag myimage:latest ${{ secrets.DOCKER_USERNAME }}/bookmarker-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bookmarker-api:latest
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled

  build-bookmarker-ui:
    name: Build bookmarker-ui
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookmarker-ui-nextjs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js 20.9.0
        uses: actions/setup-node@v4
        with:
          node-version: 20.9.0
          cache: 'yarn'
          cache-dependency-path: bookmarker-ui-nextjs/yarn.lock
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - if: ${{ github.ref == 'refs/heads/main' }}
        name: Build and Publish Docker Image
        run: |
          docker build -f Dockerfile.ui -t ${{ secrets.DOCKER_USERNAME }}/bookmarker-ui-nextjs .
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/bookmarker-ui-nextjs